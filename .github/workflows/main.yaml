name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install backend dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        python -m unittest  # if you add backend tests
    - name: Lint backend
      run: |
        cd backend
        pip install flake8
        flake8 .

    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: '18'
    - name: Install frontend dependencies
      run: |
        cd frontend
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
    - name: Lint frontend
      run: |
        cd frontend
        npm install --save-dev @eslint/js
        npx eslint src/

    - name: Build & Push Docker images
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/dashboard-backend:latest ./backend
        docker build -t ${{ secrets.DOCKER_USERNAME }}/dashboard-frontend:latest ./frontend
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push ${{ secrets.DOCKER_USERNAME }}/dashboard-backend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/dashboard-frontend:latest

    - name: Set up kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
    - name: Deploy to local cluster
      run: |
        kubectl apply -f Kubernetes_yamls/namespace-dashboard.yaml
        kubectl apply -f Kubernetes_yamls/backend-deployment.yaml
        kubectl apply -f Kubernetes_yamls/backend-service.yaml
        kubectl apply -f Kubernetes_yamls/frontend-deployment.yaml
        kubectl apply -f Kubernetes_yamls/frontend-service.yaml
